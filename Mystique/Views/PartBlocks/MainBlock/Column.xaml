<UserControl xmlns:mb="clr-namespace:Mystique.Views.PartBlocks.MainBlock"
        xmlns:my="clr-namespace:Mystique.Views.CustomPanels" x:Class="Mystique.Views.PartBlocks.MainBlock.Column"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d" d:DesignHeight="50"
        d:DesignWidth="300" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:cp="clr-namespace:Mystique.Views.Converters.Particular" xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:act="clr-namespace:Mystique.Views.Behaviors.Actions">
    <UserControl.Resources>

        <BitmapImage UriSource="/Resources/add.png" x:Key="AddColumn" />

        <cp:NotZeroToVisibleConverter x:Key="NotZeroVisibleConverter" />

        <ContextMenu x:Key="TabParentContextMenu">
            <MenuItem Header="新しいタブの追加(_N)..." />
            <MenuItem Header="最後に閉じたタブを元に戻す(_R)" />
        </ContextMenu>
        <ContextMenu x:Key="TabContextMenu">
            <MenuItem Header="このタブを編集(_E)..." />
            <Separator />
            <MenuItem Header="新しいタブ(_N)..." />
            <MenuItem Header="最後に閉じたタブを元に戻す(_R)" />
            <Separator />
            <MenuItem Header="タブを閉じる(_C)" />
        </ContextMenu>

        <Style x:Key="SelectorStyle" TargetType="{x:Type Border}">
            <Style.Resources>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="InactiveBack">
                    <GradientStop Color="Gainsboro" Offset="0.5" />
                    <GradientStop Color="Silver" Offset="1" />
                </LinearGradientBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="ActiveBack">
                    <GradientStop Color="Gainsboro" Offset="0.5" />
                    <GradientStop Color="LightBlue" Offset="1" />
                </LinearGradientBrush>
            </Style.Resources>
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource InactiveBack}" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ActiveBack}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ItemTemplate">
            <Border x:Name="Border" BorderThickness="1" Margin="0" BorderBrush="Gray" Padding="0"
                    Style="{StaticResource SelectorStyle}" ContextMenu="{StaticResource TabContextMenu}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <act:DragDropStartAction DragDropData="{Binding}"
                                BeforeDragDropCommand="{Binding Path=DataContext.DragDropStartCommand, ElementName=TabOwner}"
                                AfterDragDropCommand="{Binding Path=DataContext.DragDropFinishCommand, ElementName=TabOwner}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0.3" />
                        <GradientStop Color="Silver" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=TabProperty.Name}" Foreground="Black" Padding="4"
                            VerticalAlignment="Center" />
                    <Button Margin="1"
                            Visibility="{Binding Converter={StaticResource NotZeroVisibleConverter}, Path=NewTweetsCount}"
                            Command="{Binding ClearNewTweetsCountCommand}" Style="{DynamicResource FlatButtonStyle}">
                        <TextBlock Text="{Binding Path=NewTweetsCount}" TextBlock.FontWeight="Bold" />
                    </Button>
                </StackPanel>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Background" TargetName="Border" Value="White" />
                    <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,0" />
                    <Setter Property="Padding" TargetName="Border" Value="0,0,0,1" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="ContainerStyle">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="ContentTemplate" Value="{StaticResource ItemTemplate}" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <ItemsControl ItemsSource="{Binding TabItems}" Grid.Row="1" Margin="0,-2,0,0">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <my:FillPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <mb:TimelineList Margin="1,0"
                            Visibility="{Binding IsSelected, Converter={StaticResource BoolVisibleConverter}}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ListBox x:Name="TabOwner" Grid.Column="0" Grid.ColumnSpan="3" VerticalContentAlignment="Stretch"
                    HorizontalContentAlignment="Stretch" ItemContainerStyle="{StaticResource ContainerStyle}"
                    ItemsSource="{Binding TabItems}" ContextMenu="{StaticResource TabParentContextMenu}"
                    SelectedItem="{Binding SelectedTabViewModel}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled" Padding="0" Margin="0" BorderThickness="0"
                    Background="Transparent" IsSynchronizedWithCurrentItem="True"
                    InputMethod.IsInputMethodEnabled="False" ItemTemplate="{DynamicResource ItemTemplate}"
                    AllowDrop="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Drop">
                        <act:InvokePassThruCommandAction Command="{Binding OnDropCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.Style>
                    <Style>
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                        </Style.Resources>
                    </Style>
                </ListBox.Style>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
            <Image VerticalAlignment="Center" Grid.Column="0" Source="{StaticResource AddColumn}" Width="16" Height="16"
                    Margin="-9,0" Visibility="{Binding IsDragOver, Converter={StaticResource BoolVisibleConverter}}"
                    ToolTip="左側に新しいカラムを作ります" Opacity="0.8" AllowDrop="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Drop">
                        <act:InvokePassThruCommandAction Command="{Binding OnDropLeftColumnCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
            <Image VerticalAlignment="Center" Grid.Column="2" Source="{StaticResource AddColumn}" Width="16" Height="16"
                    Margin="-9,0" Visibility="{Binding IsDragOver, Converter={StaticResource BoolVisibleConverter}}"
                    ToolTip="右側に新しいカラムを作ります" Opacity="0.8" AllowDrop="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Drop">
                        <act:InvokePassThruCommandAction Command="{Binding OnDropRightColumnCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
        </Grid>
    </Grid>
</UserControl>
