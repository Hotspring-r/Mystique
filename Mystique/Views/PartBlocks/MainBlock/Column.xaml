<UserControl x:Class="Mystique.Views.PartBlocks.MainBlock.Column"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="clr-namespace:Mystique.Views.Behaviors"
             xmlns:ba="clr-namespace:Mystique.Views.Behaviors.Actions"
             xmlns:cp="clr-namespace:Mystique.Views.Converters.Particular"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dlg="clr-namespace:Mystique.Views.Dialogs"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:mb="clr-namespace:Mystique.Views.PartBlocks.MainBlock"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:my="clr-namespace:Mystique.Views.CustomPanels"
             d:DesignHeight="50"
             d:DesignWidth="300"
             InputMethod.IsInputMethodEnabled="False"
             mc:Ignorable="d">
    <UserControl.Resources>
        <BitmapImage x:Key="AddColumn" UriSource="/Resources/add.png" />
        <cp:NotZeroToVisibleConverter x:Key="NotZeroVisibleConverter" />
        <ContextMenu x:Key="TabParentContextMenu">
            <MenuItem Command="{Binding AddNewTabCommand}" Header="新しいタブの追加(_N)..." />
            <MenuItem Command="{Binding RebirthTabCommand}" Header="最後に閉じたタブを元に戻す(_R)" />
        </ContextMenu>

        <Style x:Key="SelectorStyle" TargetType="{x:Type Border}">
            <Style.Resources>
                <LinearGradientBrush x:Key="InactiveBack" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.5" Color="Gainsboro" />
                    <GradientStop Offset="1" Color="Silver" />
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="ActiveBack" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.5" Color="Gainsboro" />
                    <GradientStop Offset="1" Color="LightBlue" />
                </LinearGradientBrush>
            </Style.Resources>
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource InactiveBack}" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ActiveBack}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="ItemTemplate">
            <Border x:Name="Border"
                    Margin="0"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Padding="0"
                    Style="{StaticResource SelectorStyle}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <ba:InvokePassThruCommandAction Command="{Binding TabMouseDownCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                    <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding Path=EditTabCommand}"
                                  Header="このタブを編集(_E)..." />
                        <Separator />
                        <MenuItem Command="{Binding Path=Parent.AddNewTabCommand}" Header="新しいタブの追加(_N)..." />
                        <MenuItem Command="{Binding Path=Parent.RebirthTabCommand}" Header="最後に閉じたタブを元に戻す(_R)" />
                        <Separator />
                        <MenuItem Command="{Binding Path=CloseCommand}"
                                  Header="タブを閉じる(_C)" />
                    </ContextMenu>
                </Border.ContextMenu>
                <i:Interaction.Behaviors>
                    <b:DragDropBehavior AfterDragDropCommand="{Binding Path=DataContext.DragDropFinishCommand,
                                                                       ElementName=TabOwner}"
                                        BeforeDragDropCommand="{Binding Path=DataContext.DragDropStartCommand,
                                                                        ElementName=TabOwner}"
                                        DragDropData="{Binding}" />
                </i:Interaction.Behaviors>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0.3" Color="White" />
                        <GradientStop Offset="1" Color="Silver" />
                    </LinearGradientBrush>
                </Border.Background>
                <Grid>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding MoveFocusToThisCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                        <Rectangle Height="5"
                               VerticalAlignment="Top"
                               Visibility="{Binding IsCurrentFocused,
                                                    Converter={StaticResource BoolVisibleConverter}}">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#A087CEFA" />
                                <GradientStop Offset="1" Color="#0087CEFA" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center"
                                   Foreground="Black"
                                   Padding="4"
                                   Text="{Binding Path=Name}" />
                        <Button Margin="1"
                                Command="{Binding ClearNewTweetsCountCommand}"
                                Style="{DynamicResource FlatButtonStyle}"
                                Visibility="{Binding Converter={StaticResource NotZeroVisibleConverter},
                                                     Path=NewTweetsCount}">
                            <TextBlock Text="{Binding Path=NewTweetsCount}" TextBlock.FontWeight="Bold" />
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="White" />
                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                    <Setter TargetName="Border" Property="Padding" Value="0,0,0,1" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style x:Key="ContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="ContentTemplate" Value="{StaticResource ItemTemplate}" />
        </Style>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <l:InteractionMessageTrigger MessageKey="EditTab" Messenger="{Binding Messenger}">
            <ba:TransitionInteractionMessageAction Mode="Modal" WindowType="{x:Type dlg:TabEditor}" />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="20" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <!--  For design reasons, Timeline list comes before Tabs list.  -->
        <!--  Timeline  -->
        <ItemsControl Grid.Row="1"
                      Margin="0,-2,0,0"
                      ItemsSource="{Binding TabItems}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="GotFocus">
                    <i:InvokeCommandAction Command="{Binding GetFocusCommand}" />
                </i:EventTrigger>
                <l:InteractionMessageTrigger MessageKey="SetFocus" Messenger="{Binding Messenger}">
                    <ba:FrameworkSetFocusAction />
                </l:InteractionMessageTrigger>
            </i:Interaction.Triggers>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <my:FillPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <mb:TimelineList Margin="1,0" Visibility="{Binding IsSelected, Converter={StaticResource BoolVisibleConverter}}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <!--  Tab  -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ListBox x:Name="TabOwner"
                     Grid.Column="0"
                     Grid.ColumnSpan="3"
                     Margin="0"
                     AllowDrop="True"
                     Background="Transparent"
                     BorderThickness="0"
                     ContextMenu="{StaticResource TabParentContextMenu}"
                     HorizontalContentAlignment="Stretch"
                     InputMethod.IsInputMethodEnabled="False"
                     IsSynchronizedWithCurrentItem="True"
                     ItemContainerStyle="{StaticResource ContainerStyle}"
                     ItemsSource="{Binding TabItems, IsAsync=True}"
                     ItemTemplate="{DynamicResource ItemTemplate}"
                     Padding="0"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                     SelectedItem="{Binding SelectedTabViewModel}"
                     VerticalContentAlignment="Stretch">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Drop">
                        <ba:InvokePassThruCommandAction Command="{Binding OnDropCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.Style>
                    <Style>
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                        </Style.Resources>
                    </Style>
                </ListBox.Style>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
            <Image Grid.Column="0"
                   Width="16"
                   Height="16"
                   Margin="-9,0"
                   VerticalAlignment="Center"
                   AllowDrop="True"
                   Opacity="0.8"
                   Source="{StaticResource AddColumn}"
                   ToolTip="左側に新しいカラムを作ります"
                   Visibility="{Binding IsInDragDrop,
                                        Converter={StaticResource BoolVisibleConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Drop">
                        <ba:InvokePassThruCommandAction Command="{Binding OnDropLeftColumnCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
            <Image Grid.Column="2"
                   Width="16"
                   Height="16"
                   Margin="-9,0"
                   VerticalAlignment="Center"
                   AllowDrop="True"
                   Opacity="0.8"
                   Source="{StaticResource AddColumn}"
                   ToolTip="右側に新しいカラムを作ります"
                   Visibility="{Binding IsInDragDrop,
                                        Converter={StaticResource BoolVisibleConverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Drop">
                        <ba:InvokePassThruCommandAction Command="{Binding OnDropRightColumnCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
        </Grid>

    </Grid>
</UserControl>
